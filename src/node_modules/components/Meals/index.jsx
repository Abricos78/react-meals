import React, { useEffect } from 'react'
import { connect } from 'react-redux'

import {
    getMealsByCategory,
    getMealsByName
} from 'reducers/meals'
import { getMeals, getLoading } from 'selectors'
import MealsItem from 'components/Meals/MealsItem'
import Preloader from 'components/Preloader'

function Meals(props) {
    const { meals, loading, getMealsByCategory, getMealsByName, match } = props

    useEffect(() => {
        if (match.params.category) {
            getMealsByCategory(match.params.category)
        } else {
            getMealsByName(match.params.name)
        }
    }, [])

    return (
        <section className='meals'>
            { loading ?
                <Preloader />
            :
                meals.map(meal => <MealsItem key={meal.idMeal} {...meal} />)
            }
        </section>
    )
}

let mapStateToProps = state => {
    return {
        meals: getMeals(state),
        loading: getLoading(state, 'meals')
    }
},
mapDispatchToProps = {
    getMealsByCategory,
    getMealsByName
}

export default connect(mapStateToProps, mapDispatchToProps)(Meals)
